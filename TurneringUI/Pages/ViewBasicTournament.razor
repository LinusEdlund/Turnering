@page "/View/Basic/{Id:int}"
@using TurneringLibrary.Data;
@using TurneringLibrary.Models;
@using TurneringUI.Helpers;
@inject IMatchUpData matchUpData
@inject AuthenticationStateProvider authProvider
@inject IUserData userData


<h3>ViewBasicTournament</h3>
@if (matchUps is not null)
{

  <div class="try-grid">
    @for (int i = 0; i < matchUps?.Count; i++)
    {
      int currentIndex = i;
      @if (matchUps[i].FreeWin == false)
      {
        <div class="@Style(currentIndex) game @DisplayError(matchUps[currentIndex])" @onclick="(() => ShowMatchUp(matchUps[currentIndex]))">
          <div class="top-slot">
            <div class="name">@(matchUps[i].TeamOne?.TeamName)</div>
          </div>
          <div class="bottom-slot">
            <div class="name">@(matchUps[i].TeamTwo?.TeamName)</div>
          </div>
        </div>
      }

    }
  </div>
}
else
{
  <p>Det finns ingen match här</p>
}

@if (matchToEdit is not null)
{
  <div class="bottom-bar">
    <EditForm Model="matchToEdit" OnSubmit="Score">
      <div>
        <label>@matchToEdit.TeamOne.TeamName</label>
        <InputNumber @bind-Value="matchToEdit.TeamOneScore" />
      </div>

      <div>
        <label>@matchToEdit.TeamTwo.TeamName</label>
        <InputNumber @bind-Value="matchToEdit.TeamTwoScore" />
      </div>
      <button type="submit"></button>
    </EditForm>
  </div>

}


