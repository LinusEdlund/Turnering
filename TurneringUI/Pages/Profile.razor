@page "/Profile"
@using TurneringLibrary.Data;
@using TurneringLibrary.Models;
@using TurneringUI.Helpers;
@attribute [Authorize]
@inject ITournamentData tournamentData
@inject NavigationManager navManager
@inject AuthenticationStateProvider authProvider
@inject IUserData userData


<div class="profile-site">
  <div class="profile-table">
    <div class="header-table">
      <h2>Alla Tuneringar</h2>
    </div>
    @foreach (var t in usersTournaments)
    {
    <div class="item-table" @onclick="(() => ViewTournament(t))">
      <div>
      </div>
      <div>
        <h3>@t.TournamentName</h3>
      </div>
    </div>
    }
  </div>
</div>


@code {

  private List<TournamentModel> usersTournaments = new();

  private UserModel? loggedInUser;

  protected override async Task OnInitializedAsync()
  {
    // gör så man kan ta bort en tunering
    loggedInUser = await authProvider.GetUserFromAuth(userData);
    int id = loggedInUser?.Id ?? 0;
    if (loggedInUser is not null && id > 0)
    {
      usersTournaments = await tournamentData.GetUsersTournaments(id);
    }
  }

  private void ViewTournament(TournamentModel tournament)
  {
    navManager.NavigateTo($"/View/Basic/{tournament.Id}");
  }
}
